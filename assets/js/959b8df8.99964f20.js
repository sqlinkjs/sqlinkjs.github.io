"use strict";(self.webpackChunksqlinkjs_github_io=self.webpackChunksqlinkjs_github_io||[]).push([[6938],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},9552:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"tutorial-basics/updating-data","title":"Updating Data","description":"In MySQL, updating data involves modifying existing records in a table.","source":"@site/docs/tutorial-basics/updating-data.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/updating-data","permalink":"/docs/tutorial-basics/updating-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Inserting Data","permalink":"/docs/tutorial-basics/inserting-data"},"next":{"title":"Deleting Data","permalink":"/docs/tutorial-basics/deleting-data"}}');var i=s(4848),a=s(8453);const r={sidebar_position:3},l="Updating Data",d={},o=[{value:"Endpoint",id:"endpoint",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Request Payload",id:"request-payload",level:4},{value:"Example",id:"example",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"updating-data",children:"Updating Data"})}),"\n",(0,i.jsxs)(n.p,{children:["In MySQL, ",(0,i.jsx)(n.strong,{children:"updating data"})," involves modifying existing records in a table.",(0,i.jsx)(n.br,{}),"\n","The update process allows you to change the values of specific fields within rows to reflect new information or correct inaccuracies."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"URL"}),":  ",(0,i.jsx)(n.code,{children:"http://localhost:[PORT]/table/TABLE_NAME/update(update_key,update_value)"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"PUT"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),": ",(0,i.jsx)(n.code,{children:"200 OK"})," (on success)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"update_key"})})," \u2192 The column name used to identify the record(s) to be updated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"update_value"})})," \u2192 The value of the column to match."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This acts as the ",(0,i.jsx)(n.strong,{children:"condition"})," for the update operation."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"request-payload",children:"Request Payload"}),"\n",(0,i.jsxs)(n.p,{children:["The payload must be a ",(0,i.jsx)(n.strong,{children:"JSON object"})," containing the columns you want to update with their new values."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n"column1": "updated_value1",\n"column2": "updated_value2"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Update a user"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Request"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"PUT http://localhost:3000/table/users/update(user_id,10)\nContent-Type: application/json\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Payload"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "username": "John Doe"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Data updated successfully"\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Important Notes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure the ",(0,i.jsx)(n.code,{children:"update_key"})," exists in the table schema.."]}),"\n",(0,i.jsxs)(n.li,{children:["If the ",(0,i.jsx)(n.code,{children:"update_value"})," does not match any record, ",(0,i.jsx)(n.strong,{children:"no rows will be updated"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"The payload must only include columns that exist in the table."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Always include a ",(0,i.jsx)(n.strong,{children:"WHERE-like condition"})," (",(0,i.jsx)(n.code,{children:"update_key"}),", ",(0,i.jsx)(n.code,{children:"update_value"}),") to avoid updating all rows unintentionally."]}),"\n",(0,i.jsx)(n.li,{children:"Validate payloads before sending them to SQLink to prevent invalid updates."}),"\n",(0,i.jsx)(n.li,{children:"Combine updates with authentication to ensure only authorized users can modify records."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);