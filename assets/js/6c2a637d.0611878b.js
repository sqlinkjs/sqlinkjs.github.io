"use strict";(self.webpackChunksqlinkjs_github_io=self.webpackChunksqlinkjs_github_io||[]).push([[617],{5525:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tutorial-basics/inserting-data","title":"Inserting Data","description":"In MySQL, inserting data refers to adding new records into a table.","source":"@site/docs/tutorial-basics/inserting-data.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/inserting-data","permalink":"/docs/tutorial-basics/inserting-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Reading Data","permalink":"/docs/tutorial-basics/reading-data"},"next":{"title":"Updating Data","permalink":"/docs/tutorial-basics/updating-data"}}');var i=s(4848),r=s(8453);const a={sidebar_position:2},l="Inserting Data",o={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example",id:"example",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"inserting-data",children:"Inserting Data"})}),"\n",(0,i.jsxs)(n.p,{children:["In MySQL, ",(0,i.jsx)(n.strong,{children:"inserting data"})," refers to adding new records into a table.",(0,i.jsx)(n.br,{}),"\n","With SQLink, this is done through a simple ",(0,i.jsx)(n.strong,{children:"POST request"})," to the ",(0,i.jsx)(n.code,{children:"/create"})," endpoint, allowing you to populate a table with fresh entries."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"URL"}),":  ",(0,i.jsx)(n.code,{children:"http://localhost:[PORT]/table/TABLE_NAME/create"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"POST"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),": ",(0,i.jsx)(n.code,{children:"200 OK"})," (on success)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Insert a New User"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Request"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"POST http://localhost:3001/table/users/create\nContent-Type: application/json\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Payload"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "username": "John Doe",\n  "useremail": "johndoe@email.com",\n  "city": "Bangalore"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Data inserted successfully"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["A new record will be inserted into the ",(0,i.jsx)(n.code,{children:"users"})," table with the provided values."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Important Notes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"key names"})," in your JSON payload must exactly match the ",(0,i.jsx)(n.strong,{children:"column names"})," in the MySQL table."]}),"\n",(0,i.jsxs)(n.li,{children:["Missing required columns may cause an error, depending on your table schema (e.g., if a column is ",(0,i.jsx)(n.code,{children:"NOT NULL"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"SQLink will return a JSON response indicating whether the record was successfully inserted."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Always validate user input before sending it to the API to prevent invalid data from being inserted."}),"\n",(0,i.jsx)(n.li,{children:"Use meaningful column names in your schema to make payloads more readable."}),"\n",(0,i.jsx)(n.li,{children:"For bulk inserts, consider sending multiple requests or extending SQLink with batch processing (if supported)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);